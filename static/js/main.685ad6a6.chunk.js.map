{"version":3,"sources":["fbase.js","components/Auth/AuthForm.js","routes/Auth/Auth.js","components/Biwtter/Bweet.js","components/Biwtter/CreateBweetForm.js","routes/Home.js","routes/Profile/Profile.js","components/Navigation/Navigation.js","components/Sidebar/SideBar.js","components/Router.js","components/App.js","index.js","img/sidebar.png"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","firebase","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Bweet","bweetObj","isOwner","editing","setEditing","text","newBweet","setNewBweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","List","Item","Image","avatar","alt","src","Content","Header","creatorName","Description","faTrash","faPencilAlt","CreateBweetForm","userObj","bweet","setbweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","displayName","collection","add","maxLength","htmlFor","faPlus","accept","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","files","readAsDataURL","backgroundImage","faTimes","Home","bweets","setBweets","useEffect","orderBy","onSnapshot","snapshot","bweetArray","docs","map","key","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","autoFocus","alert","signOut","push","Navigation","to","faHome","faCalendar","faBell","faEnvelopeOpenText","faBookmark","faListAlt","faEllipsisH","faUser","SideBar","SideBarImg","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.685ad6a6.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\n                    className=\"authInput authSubmit\"\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    )\n}\nexport default AuthForm;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/Auth/AuthForm';\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"6x\"\n                style={{ marginBottom: 50 }}\n            />\n            <AuthForm />\n            <div>\n                <div className=\"authBtns\">\n                    <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                        <span>Continue with Google&#160;</span><FontAwesomeIcon color=\"white\" icon={faGoogle} size=\"2x\" />\n                    </button>\n                    <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                        <span>Continue with Github&#160;</span><FontAwesomeIcon color=\"white\" icon={faGithub} size=\"2x\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Auth;","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { List, Image } from 'semantic-ui-react';\n\n\nconst Bweet = ({ bweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newBweet, setNewBweet] = useState(bweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this bweet?\");\n        if (ok) {\n            await dbService.doc(`bweets/${bweetObj.id}`).delete();\n            await storageService.refFromURL(bweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`bweets/${bweetObj.id}`).update({\n            text: newBweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewBweet(value);\n    };\n    return (\n        <div className=\"bweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container bweetEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your bweet\"\n                            value={newBweet}\n                            required\n                            onChange={onChange}\n                        />\n                        <input type=\"submit\" value=\"Update Bweet\" className=\"formBtn\" />\n                    </form>\n                    <span onClick={toggleEditing} className=\"cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                    <>\n                        <List>\n                            <List.Item>\n                                <Image avatar alt=\"\" src='https://react.semantic-ui.com/images/avatar/small/rachel.png' />\n                                <List.Content>\n                                    <List.Header>\n                                        <span className=\"bweet__writer\">\n                                            @{bweetObj.creatorName}\n                                        </span></List.Header>\n                                    <List.Description>\n                                        <h4>{bweetObj.text}</h4>\n                                    </List.Description>\n                                </List.Content>\n                            </List.Item>\n                        </List>\n                        {bweetObj.attachmentUrl && <img className=\"bweetImage\" alt=\"\" src={bweetObj.attachmentUrl} />}\n                        {isOwner ? (\n                            <>\n                                <div className=\"bweet__actions\">\n                                    <span onClick={onDeleteClick}>\n                                        <FontAwesomeIcon icon={faTrash} />\n                                    </span>\n                                    <span onClick={toggleEditing}>\n                                        <FontAwesomeIcon icon={faPencilAlt} />\n                                    </span>\n                                </div>\n                            </>\n                        ) : (\n                                <div className=\"bweet__writer\">\n                                    <span>\n                                        @{bweetObj.creatorName}\n                                    </span>\n                                </div>\n                            )}\n                    </>\n                )}\n        </div>\n    );\n};\n\nexport default Bweet;","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { storageService, dbService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst CreateBweetForm = ({ userObj }) => {\n    const [bweet, setbweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (bweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const bweetObj = {\n            text: bweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            creatorName: userObj.displayName,\n            attachmentUrl,\n        };\n        await dbService.collection(\"bweets\").add(bweetObj);\n        setbweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setbweet(value);\n    };\n    const onFileChange = (event) => {\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        if (Boolean(event.target.files[0])) {\n            reader.readAsDataURL(event.target.files[0]);\n        }\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={bweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                className=\"opacity0\"\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        alt=\"\"\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n}\nexport default CreateBweetForm;","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport Bweet from '../components/Biwtter/Bweet'\nimport CreateBweetForm from '../components/Biwtter/CreateBweetForm';\n\nconst Home = ({ userObj }) => {\n    const [bweets, setBweets] = useState([]);\n    useEffect(() => {\n        dbService\n            .collection(\"bweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const bweetArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setBweets(bweetArray);\n            });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <CreateBweetForm userObj={userObj} />\n            <div className=\"marginTop30\">\n                {bweets.map((bweet) => (\n                    <Bweet\n                        key={bweet.id}\n                        bweetObj={bweet}\n                        isOwner={bweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;","import React, { useState } from 'react';\nimport { authService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"profileFormBtn\"\n                    onClick={() => { alert('Profile is updated successfully'); }}\n                />\n            </form>\n            <span className=\"profileCancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faHome, faCalendar, faUser, faEnvelopeOpenText, faBell, faBookmark, faListAlt, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <header>\n            <div className=\"header_container\">\n                <Link to=\"/\" >\n                    <FontAwesomeIcon className=\"bwitterIcon\" icon={faTwitter} color={\"White\"} size=\"2x\" />\n                </Link>\n                <nav>\n                    <ul>\n                        <Link to=\"/\"><li><FontAwesomeIcon className=\"fontIcon\" icon={faHome} size=\"1x\" />Home</li></Link>\n                        <li><FontAwesomeIcon className=\"fontIcon\" icon={faCalendar} size=\"1x\" />Explore</li>\n                        <li><FontAwesomeIcon className=\"fontIcon\" icon={faBell} size=\"1x\" />Notifications</li>\n                        <li><FontAwesomeIcon className=\"fontIcon\" icon={faEnvelopeOpenText} size=\"1x\" />Message</li>\n                        <li><FontAwesomeIcon className=\"fontIcon\" icon={faBookmark} size=\"1x\" />BookMarks</li>\n                        <li><FontAwesomeIcon className=\"fontIcon\" icon={faListAlt} size=\"1x\" />Lists</li>\n                        <li><FontAwesomeIcon className=\"fontIcon\" icon={faEllipsisH} size=\"1x\" />More</li>\n                    </ul>\n                </nav>\n                <Link\n                    className=\"linkProfile\"\n                    to=\"/profile\">\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span className=\"marginTop10\">\n                        &#160;&#160;{userObj.displayName}\n                    </span>\n                </Link>\n            </div>\n        </header>\n    )\n}\nexport default Navigation;","import React from 'react'\nimport SideBarImg from '../../img/sidebar.png'\nconst SideBar = () => {\n    return (\n        <div className=\"sideBarContainer\">\n            <img alt=\"\" src={SideBarImg} />\n        </div>\n    );\n}\nexport default SideBar;","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Auth from '../routes/Auth/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile/Profile';\nimport Navigation from './Navigation/Navigation';\nimport SideBar from './Sidebar/SideBar';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn ? (\n                <div className=\"routerContainer\">\n                    <Navigation userObj={userObj} />\n                    <Route exact path=\"/\">\n                        <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path=\"/profile\">\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                    <SideBar />\n                </div>\n            ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )}\n        </Router >\n    )\n}\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        if (user.displayName !== null) {\n          setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n          });\n        } if (user.displayName == null) {\n          setUserObj({\n            displayName: user.email,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n          });\n        }\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n\n      ) : (\n          <div className=\"loadingIcon\">\n            <FontAwesomeIcon icon={faTwitter} color={\"White\"} size=\"10x\" />\n            <h2>Bwitter!!!!</h2>\n          </div>\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style/master.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/sidebar.b6fdb06d.png\";"],"sourceRoot":""}